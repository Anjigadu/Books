package hello;

import java.net.URISyntaxException;

import org.springframework.web.client.RestTemplate;

public class Application {

    public static void main(String args[]) throws URISyntaxException {
        RestTemplate restTemplate = new RestTemplate();
        Greeting greeting = restTemplate.getForObject("http://localhost:8080/greeting", Greeting.class);
        System.out.println("Received is "+ greeting);
        Greeting recievedGreeting = restTemplate.postForObject("http://localhost:8080/greetRequest", greeting, Greeting.class);
        System.out.println("Recieved Greeting is "+ recievedGreeting);
    }

}




//Server is 
package hello;

import java.util.concurrent.atomic.AtomicLong;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class GreetingController {

	public GreetingController() {
		super();
	}

	private static final String template = "Hello, %s!";
    private final AtomicLong counter = new AtomicLong();

    @RequestMapping("/greeting")
    public Greeting greeting(@RequestParam(value="name", defaultValue="World") String name) {
        return new Greeting(counter.incrementAndGet(),
                            String.format(template, name));
    }
    
    @RequestMapping(method= RequestMethod.POST, value= "/greetRequest")
    public Greeting greetingResponse(Greeting greetRequest) {
    	greetRequest.setId(counter.incrementAndGet());
    	greetRequest.setContent("Hello 123");
    	return greetRequest;
    }
}


//For info on Jax-ws client, search for mykong's restful client example. There are many ways of writing Restful client. One is using Apache HTTPClient libraries
http://www.mkyong.com/webservices/jax-rs/restful-java-client-with-apache-httpclient/
The second is Jersey client
http://www.mkyong.com/webservices/jax-rs/restful-java-client-with-jersey-client/
